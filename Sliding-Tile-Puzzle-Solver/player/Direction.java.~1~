/* Direction.java */

package player;

/**
 *  
 **/

public class Direction {

    public static final int SW = 1;
    public static final int S = 2;
    public static final int SE = 3;
    public static final int W = 4;
    public static final int E = 6;
    public static final int NW = 7;
    public static final int N = 8;
    public static final int NE = 9;
    public static final int[] directions = {SW, S, SE, W, E, NW, N, NE};

    public static int incrementX(int dir) {
        if ((dir % 3 == 0)) { // 3, 6, 9
            return 1;
        }
        else if ((dir % 3 == 1)) { // 1, 4, 7
            return -1;
        }
        else { // 2, 8
            return 0;
        }
    }

    public static int incrementY(int dir) {
        if ((dir > 6)) { //7, 8, 9
            return 1;
        }
        else if ((dir < 4)) { // 1, 2, 3
            return -1;
        }
        else { // 4, 6
            return 0;
        }
    }

    public static int indexX(int dir) {
        return 1 + incrementX(dir);
    }

    public static int indexY(int dir) {
        return 1 + incrementY(dir);
    }

    public static int opposite(int dir) {
        return (10 - dir);
    }
}
